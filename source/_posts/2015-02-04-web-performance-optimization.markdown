---
layout: post
title: "关于网站性能优化的几点思考"
date: 2015-02-04 00:34:38 +0800
published: false
categories: [js,网站性能]
---
本篇文章主要记录一下近期在网站性能优化方面接触到的一些东西，以及自己的一些总结感想。  
### 引起我关注网站性能的一件小事  
<!--more-->
以前在百度做的是商业产品，几乎没有考虑过性能优化这方面。真正引起我关注网站性能，其实是在现在所在创业公司的一件小事。  
简单来说，就是在我们平台上，有一个用户可以自己填写富文本信息的地方。本来富文本编辑器是为了让用户更方便的展示自己的信息，
但导致的一个问题是用户输入的太随意了，比较传了一张很宽的图片，图片超出我们的页面宽度，导致样式错乱。
还有就是用户填的图片像素太高，这样在m站打开时会很慢，而且会很轻易耗费用户的流量。  
当时老大让我解决下这个问题，基本思路是这样的：

* 样式方面，检测一下富文本内容里面的图片宽度，如果超出给定的屏幕宽度，则更改一个标签的css样式，使其宽度不超出。  
* 性能方面，如果图片的像素超出屏幕的宽度，则自动对图片做裁剪，让用户下载的是裁剪后的小图而不是原图，提高加载速度，
 节省用户流量。  

后期又做了两点改进：

* 在有wifi的情况下如果对图片进行了裁剪可能会影响阅读质量，因此在有wifi的情况下只调整样式不裁剪图片。  
* 对富文本中的表格也做了样式调整，表格宽度超出屏幕时自动调整至屏幕宽度。  

其实做起来都不是很难，不过原本我觉得富文本的内容都是用户自己填写的我们管不了。这件事情改变了我的态度，发现一个真正重视技术的公司，
会从技术上对用户体验做更好的优化。像以前我从来没有考虑过让用户节省流量这种事情，不过现在我们要做用户产品了
，所以每一个细节点都可能需要考虑到。  
### 对自己搭建的博客的性能优化  
可能由于我是后端RD的原因，虽然我会写一些js/css/html，但以前总觉得反正我是写后端的，对于前端的东西能写出来就行，才不要关注性能呢。
后来自己搭建了`github`博客，是一个纯静态的博客。对于自己的东西态度就不一样了。刚开始搭建好的时候虽然功能齐全了，
但发现打开的速度很慢很慢，然后通过网络请求，发现主要是引用了很多`google`的js代码，而很多是被屏蔽或者特别慢的。所以第 一步就从这里入手了，把一些不需要的js引用去掉了，像`jquery`这些必须的，则是直接把它下载到本地，然后把引用的src改成本地的
，还有一些像`MathJax.js`这种的，虽然不知道用来做什么的，我也都下载到本地，让他直接从自己的站点加载，这样就不会受引用源的访问速度的影响了。
还包括一些css以及小的图片，比如github上的icon。这些东西都尽量放在自己的站点文件里面。这样网站访问速度感觉提高了不好。  
再后来，发现还有一些字体是加载`gstatic`的字体，因为我觉得对于访问速度远比字体样式上的一点改进重要，所以直接把这些字体样 式的加载去掉了。
还有就是网站引用了`disqus`的评论功能，每次都需要加载`disqus`的一些`js`，这个成了性能瓶颈。而我觉得我的博客目前也没有人评论，
所以也权衡之后也直接把这个功能关掉了。    
之前因为每次fe改一点代码都需要先编译一下再联调，感觉他们那个东西很麻烦，为什么非要压缩了，为了一点性能提升搞得开发这么
麻烦。但真正到自己做优化时，则会发现真的恨不得加载的css/js越少越好，所以也就理解为什么他们要对线上的js/css进行压缩了。   
### 关于移动H5前端性能优化
一次看到一个老大发在技术群里的一篇文章[移动H5前端性能优化指南-腾讯ISUX](http://isux.tencent.com/h5-performance.html) ，看了之后感觉突然间明白了移动开发与PC开发的一点很重要的区别。之前可能完全没这种意识，这里面提到的一些东西确让我有一种醍醐灌顶的感觉。在移动端，很多页面是在2G/3G网络下打开的，受网速的限制，如果一个页面下载的数据量太大必然会造成打开速度很慢，体验很 差。所以不管是css/js还是页面上的图片，以及整个网页的体积都需要更多的优化它们的大小。另外优化点还包括减少`cookie`，避免重定向等，有些也是需要后端关注的，更确切来说是从整个技术设计上需要考虑的，像302跳转在pc上是经常用到的，但如果在m站还用同 样的方式处理就会很严重影响用户体验。  
这篇文章还给我的另外一点感触就是：优秀的人才真的永远都是稀缺的。很多人会觉得前端没什么技术含量，觉得php门槛太低谁都会写，但像这篇文章里面分析到的，能从浏览器渲染的原理方面来分析对css/js的写法进行优化（比如尽量使用ID选择器、减少重绘等），同样是很有技术含量的一篇文章。在细节方面做到极致，从产品特性上把握住技术要点，这些能力可能是一个技术leader很需要的能力。  
### 未完待续 
以上几点主要是对于工作中遇到的一些事情的感悟，主要是作为一个后端RD对于前端的优化的思考。  
对于后端的性能优化，最近也有不少的感想，以后也会找时间一起记录在这里。  
所以，未完...待续...   

